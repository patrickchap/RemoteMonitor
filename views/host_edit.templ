package views

import (
	component "RemoteMonitor/views/components"
	"RemoteMonitor/views/layouts"
	viewmodels "RemoteMonitor/views/viewModels"
	"fmt"
	"strconv"
)

templ HostsEditdHeader() {
	<title>RemoteMonitor | Hosts Edit</title>
}

var hostsEditBreadcrumb = map[string]string{
	"Hosts": "/admin/hosts",
	"Edit":  "",
}

templ HostEdit(id int64) {
	@layouts.Base(HostsEditdHeader()) {
		<h1>edit host with id: { strconv.FormatInt(id, 10) }</h1>
		<div class="pt-20 px-6 bg-gray-200 dark:bg-background-dark h-full sm:ml-64">
			@component.Breadcrumb(hostsEditBreadcrumb, "Edit")
			<h1 class="text-xl text-gray-700 dark:text-gray-200 p-2 my-3 rounded-lg w-full font-semibold">Edit Host</h1>
			<hr class="border-b dark:border-gray-700 w-full"/>
			<div class="mb-4 border-b border-gray-200 dark:border-gray-700">
				<ul class="flex flex-wrap -mb-px text-sm font-medium text-center" id="default-tab" data-tabs-toggle="#default-tab-content" role="tablist">
					<li class="me-2" role="presentation">
						<button class="inline-block p-4 border-b-2 rounded-t-lg" id="profile-tab" data-tabs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false">Host Details</button>
					</li>
					<li class="me-2" role="presentation">
						<button class="inline-block p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300" id="dashboard-tab" data-tabs-target="#dashboard" type="button" role="tab" aria-controls="dashboard" aria-selected="false">Services</button>
					</li>
					<li class="me-2" role="presentation">
						<button class="inline-block p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300" id="settings-tab" data-tabs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">Schedule Logs</button>
					</li>
					<li role="presentation">
						<button class="inline-block p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300" id="contacts-tab" data-tabs-target="#contacts" type="button" role="tab" aria-controls="contacts" aria-selected="false">Contacts</button>
					</li>
				</ul>
			</div>
			<div id="default-tab-content">
				<div class="hidden p-4 rounded-lg" id="profile" role="tabpanel" aria-labelledby="profile-tab">
					<div hx-get={ fmt.Sprintf("/admin/host/edit/form/%d", id) } hx-target="this" hx-swap="outerHTML" hx-trigger="load"></div>
				</div>
				<div class="hidden p-4 rounded-lg" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
					@EditServicesForm([]viewmodels.HostServiceEdit{})
				</div>
				<div class="hidden p-4 rounded-lg bg-gray-50 dark:bg-gray-800" id="settings" role="tabpanel" aria-labelledby="settings-tab">
					<p class="text-sm text-gray-500 dark:text-gray-400">This is some placeholder content the <strong class="font-medium text-gray-800 dark:text-white">Settings tab's associated content</strong>. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling.</p>
				</div>
				<div class="hidden p-4 rounded-lg bg-gray-50 dark:bg-gray-800" id="contacts" role="tabpanel" aria-labelledby="contacts-tab">
					<p class="text-sm text-gray-500 dark:text-gray-400">This is some placeholder content the <strong class="font-medium text-gray-800 dark:text-white">Contacts tab's associated content</strong>. Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling.</p>
				</div>
			</div>
		</div>
	}
}

templ EditServicesForm(serviceEdit []viewmodels.HostServiceEdit) {
	<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
		<table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
			<thead class="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-300 tracking-wider">
				<tr>
					<th scope="col" class="px-6 py-3">
						Service	
					</th>
					<th scope="col" class="px-6 py-3">
						Schedule	
					</th>
					<th scope="col" class="px-6 py-3">
						Remove Service	
					</th>
				</tr>
			</thead>
			<tbody class="divide-y divide-gray-700">
				for _, service := range serviceEdit {
					<tr class="odd:bg-white odd:dark:bg-background-dark even:bg-gray-50 even:dark:bg-surface-dark border-b dark:border-gray-700">
						<th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
							{ service.HostName }
						</th>
						<td class="px-6 py-4"></td>
						<td class="px-6 py-4"></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ EditHostForm(host viewmodels.Host) {
	<form class="mx-auto" hx-put="/admin/host/edit/form" hx-target="this" hx-swap="outerHTML">
		<div class="grid md:grid-cols-2 md:gap-6">
			<div class="relative z-0 w-full mb-5 group">
				<input type="hidden" name="id" value={ strconv.FormatInt(host.ID, 10) }/>
				<input type="text" value={ host.HostName } name="host_name" id="host_name" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required/>
				<label for="host_name" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Host Name</label>
			</div>
			<div class="relative z-0 w-full mb-5 group">
				<input type="text" name="canonical_name" value={ host.CanonicalName.String } id="canonical_name" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required/>
				<label for="canonical_name" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Canonical Name</label>
			</div>
			<div class="relative z-0 w-full mb-5 group">
				<input type="text" name="url" value={ host.Url.String } id="url" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required/>
				<label for="url" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">URL</label>
			</div>
			<div class="relative z-0 w-full mb-5 group">
				<input type="text" name="ip" value={ host.Ip.String } id="ip" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required/>
				<label for="ip" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">IP</label>
			</div>
			<div class="relative z-0 w-full mb-5 group">
				<input type="text" name="ipv6" id="ipv6" value={ host.Ipv6.String } class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required/>
				<label for="ipv6" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">IPV6</label>
			</div>
		</div>
		<button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Update</button>
	</form>
}
